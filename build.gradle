plugins {
    id 'java-library'
    // id 'com.cleanroommc.gradle'
    id 'org.jetbrains.gradle.plugin.idea-ext' version '1.1.7'
}

def sysProps = System.getProperties()

group 'com.cleanroommc'
version major_version << '.' << minor_version << '.' << patch_version

println "Running Cleanroom $version | Forge $latest_forge_version"
println "With Java: ${sysProps['java.version']} | JVM: ${sysProps['java.vm.version']} | Vendor: ${sysProps['java.vendor']} | Architecture: ${sysProps['os.arch']}"

allprojects {
    tasks.withType(JavaCompile).each {
        it.options.encoding = 'UTF-8'
    }
}

// TODO: + vanilla sourceset
sourceSets {
    forge {
        java {
            compileClasspath += sourceSets.main.runtimeClasspath
            runtimeClasspath += sourceSets.main.runtimeClasspath
        }
    }
    cleanroom {
        java {
            compileClasspath += sourceSets.forge.runtimeClasspath
            runtimeClasspath += sourceSets.forge.runtimeClasspath
        }
    }
    lwjglx {
        java {
            compileClasspath += sourceSets.cleanroom.runtimeClasspath
            runtimeClasspath += sourceSets.cleanroom.runtimeClasspath
        }
    }
    includes {
        java {
            compileClasspath += sourceSets.cleanroom.runtimeClasspath
            runtimeClasspath += sourceSets.cleanroom.runtimeClasspath
        }
    }
}